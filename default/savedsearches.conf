# Source Scout's outage detection alert monitors index-sourcetype pairs for outages based on acceptable tolerance limits
[Source Scout - Detect Source Outages]
disabled = 1
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */5 * * * *
description = Source Scout's outage detection alert monitors index-sourcetype pairs for outages based on acceptable tolerance limits.
dispatch.earliest_time = -48h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","index","cd"]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = area
display.visualizations.type = singlevalue
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = | tstats latest(_time) as latest_event where `source-scout-search-constraint` by index sourcetype\
| eval data_source=index+"|"+sourcetype\
| fields data_source latest_event\
| append\
    [| inputlookup source-scout-data-sources]\
| stats values(latest_event) as latest_event, max(tolerance_in_seconds) as tolerance_in_seconds by data_source\
| search tolerance_in_seconds=*\
| eval time_delta=now()-latest_event, state=case(time_delta>tolerance_in_seconds,0,isnull(latest_event),0,true(),1), latest_event=strftime(latest_event, "%a %B %d %Y %H:%M:%S"), latest_event=if(isnull(latest_event),"Not seen in this time window",latest_event)\
| rename data_source as "Data Source (index|sourcetype)", latest_event as "Time of Latest Event", state as State, time_delta as "Time Delta (In Seconds)", tolerance_in_seconds as "Acceptable Tolerance (In Seconds)"\
| where State=0
